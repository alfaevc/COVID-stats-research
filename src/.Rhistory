labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend),
size=2))+
scale_fill_discrete(name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, day)
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2)+
scale_color_discrete(name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_discrete(name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_discrete(name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag(state, 30)
plot_lag(state, 60)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_manual(values=c("#ff9933","#33ccff", "#e6e6e6"),
name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_manual(values=c("#ff7878","#05eeff", "#c7c7c7"),
name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_manual(values=c("#ff7878","#05eeff"),
name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_discrete(
name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
plot_lag(state, 14)
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag(state, 14)
plot_lag(state, 30)
plot_lag(state, 14)
plot_lag(state, 60)
state="PENNSYLVANIA"
plot_lag(state, 14)
plot_lag(state, 30)
plot_lag(state, 60)
state="WASHINGTON"
plot_lag(state, 14)
plot_lag(state, 30)
plot_lag(state, 60)
state="FLORIDA"
plot_lag(state, 14)
plot_lag(state, 30)
plot_lag(state, 60)
plot_lag_interact <- function(state, lead_n){
state_data <- data[data$STATE==state,]
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
state_data[!is.na(state_data$EVENT_CATG_S)]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot2 <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
Date=DATE, Event=EVENT_CATG_S, alpha=0.9,
shape=as.factor(is_weekend)))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
ggplotly(plot2, tooltip=c("x", "y", "Date", "Event"))
}
plot_lag(state, 14)
plot_lag_interact <- function(state, lead_n){
state_data <- data[data$STATE==state,]
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
state_data = state_data[!is.na(state_data$EVENT_CATG_S),]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot2 <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
Date=DATE, Event=EVENT_CATG_S, alpha=0.9,
shape=as.factor(is_weekend)))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
ggplotly(plot2, tooltip=c("x", "y", "Date", "Event"))
}
plot_lag(state, 14)
state_data <- data[data$STATE==state,]
state_data[!is.na(state_data$EVENT_CATG_S),]
a = state_data[!is.na(state_data$EVENT_CATG_S),]
View(a)
colnames(a)
plot_lag_interact <- function(state, lead_n){
state_data <- data[data$STATE==state,]
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
# calculate correlation
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
# only keep interventions
state_data <- state_data[!is.na(state_data$EVENT_CATG_S),]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
plot2 <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
Date=DATE, Event=EVENT_CATG_S, alpha=0.9,
shape=as.factor(is_weekend)))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Norm NC Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
ggplotly(plot2, tooltip=c("x", "y", "Date", "Event"))
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
# calculate correlation
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
# only keep interventions
state_data <- state_data[!is.na(state_data$EVENT_CATG_S),]
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
shape=as.factor(is_weekend)), size=2, alpha=0.9)+
scale_color_discrete(
name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_shape_discrete(name="weekday/weekend",
label=c("weekday", "weekend"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
# calculate correlation
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
# only keep interventions
state_data <- state_data[!is.na(state_data$EVENT_CATG_S),]
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg)), size=3)+
scale_color_discrete(
name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
alpha=as.factor(big_event_catg)), size=2)+
scale_color_discrete(name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_alpha_manual(values=c(1,1,0))
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
alpha=as.factor(big_event_catg)), size=2)+
scale_color_discrete(name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued",
"No Intervention"))+
scale_alpha_manual(values=c(1,1,0))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag <- function(state, lead_n){
state_data <- data[data$STATE==state,]
identity_x <- seq(0, max(na.omit(state_data$NEWCD_NORM_500)), by=1)
identity_y <- identity_x
state_data$big_event_catg <- sapply(state_data$EVENT_CATG_S,
FUN=group_event_catg)
corr <- round(acf(na.omit(state_data$NEWCD_NORM_500),
lag.max=lead_n,
plot=FALSE)[lead_n]$acf[1], digits=2)
plot <- ggplot(data=state_data)+
geom_point(aes(x=NEWCD_NORM_500, y=lead(NEWCD_NORM_500, n=lead_n),
col=as.factor(big_event_catg),
alpha=as.factor(big_event_catg)), size=2)+
scale_color_manual(values=c("red","blue","white"),name="Event Category",
labels=c("Ease/Lifting", "Mandatory/Re-issued"))+
scale_alpha_manual(values=c(1,1,0))+
geom_line(data=data.frame(identity_x, identity_y),
aes(x=identity_x, y=identity_y), linetype="dotted", size=1)+
labs(title=paste(str_to_title(state),"lag", lead_n, "correlation=", corr),
x="Today's Norm New Confirmed Cases",
y=paste("Normalized New Daily Cases", lead_n, "days later"),
col = "Event_Category")+
theme_bw()
print(plot)
}
state = "WISCONSIN"
for (day in c(14, 21, 30, 45, 60, 90)){
plot_lag(state, day)
}
plot_lag(state, 14)
